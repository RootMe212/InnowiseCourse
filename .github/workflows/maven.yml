# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean compile -B package --file userservice/pom.xml

  test:

    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Test with maven
        run: mvn test -B package --file userservice/pom.xml

  code-analysis:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          mvn -B clean verify sonar:sonar --file userservice/pom.xml \
            -Dsonar.projectKey=KirylSamkov_InnowiseCourse \
            -Dsonar.organization=KirylSamkov \ 
            -Dsonar.host.url = https://sonarcloud.io \
            -Dsonar.sources=src/main/java \ 
            -Dsonar.tests=src/test/java \ 
            -Dsonar.java.binaries=target/classes

  artifact-creation:
    runs-on: ubuntu-latest
    needs: [ build , test, code-analysis ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build jar with Maven
        run: mvn clean package -B -DskipTests --file userservice/pom.xml

      - name: set up docker build
        uses: actions/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./userservice
          push: false
          tags: user-service:latest

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: user-service-jar
          path: userservice/target/user-service.jar